#include<bits/stdc++.h>
using namespace std;
vector<int> adj[100001];
vector<bool> isVisited(100001, false);
vector<int> sides(100001, -1);
bool check = false;

void dfs(int u, int parent)
{
    if(isVisited[u]){
        if(sides[u] == sides[parent]){
            cout << 0;
            exit(0);
        }
        return;
    }
    isVisited[u] = true;
    if(sides[parent] == 1){
        sides[u] = 0;
    }else if(sides[parent] == 0){
        sides[u] = 1;
    }
    for(int i = 0; i < adj[u].size(); i++){
        int v = adj[u][i];
        if(v == parent){
            continue;
        }
        dfs(v, u);
    }
}

int main() 
{
    int N, M;
    cin >> N >> M;
    for(int i = 0; i < M; i++){
        int a, b;
        cin >> a >> b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    sides[0] = 0;
    for(int i = 1; i <= N; i++){
        if(!isVisited[i])
            dfs(i, 0);
    }
    cout << 1;
    
    return 0;
}
